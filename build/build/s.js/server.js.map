{"version":3,"sources":["../../s.js/server.js"],"names":["_express","require","_express2","_interopRequireDefault","_apolloServerExpress","_cors","_cors2","_faker","_faker2","_lodash","_lodash2","_lodash3","_lodash4","_schema","_resolvers","_fakes","_models","_models2","obj","__esModule","default","typeDefs","generateTypeDefs","resolvers","generateResolvers","port","process","env","PORT","server","ApolloServer","gql","context","db","app","use","applyMiddleware","static","sequelize","sync","then","generateFakes","listen","console","log"],"mappings":"AAAA;;AAEA,IAAIA,WAAWC,QAAQ,SAAR,CAAf;;AAEA,IAAIC,YAAYC,uBAAuBH,QAAvB,CAAhB;;AAEA,IAAII,uBAAuBH,QAAQ,uBAAR,CAA3B;;AAEA,IAAII,QAAQJ,QAAQ,MAAR,CAAZ;;AAEA,IAAIK,SAASH,uBAAuBE,KAAvB,CAAb;;AAEA,IAAIE,SAASN,QAAQ,OAAR,CAAb;;AAEA,IAAIO,UAAUL,uBAAuBI,MAAvB,CAAd;;AAEA,IAAIE,UAAUR,QAAQ,cAAR,CAAd;;AAEA,IAAIS,WAAWP,uBAAuBM,OAAvB,CAAf;;AAEA,IAAIE,WAAWV,QAAQ,eAAR,CAAf;;AAEA,IAAIW,WAAWT,uBAAuBQ,QAAvB,CAAf;;AAEA,IAAIE,UAAUZ,QAAQ,UAAR,CAAd;;AAEA,IAAIa,aAAab,QAAQ,aAAR,CAAjB;;AAEA,IAAIc,SAASd,QAAQ,SAAR,CAAb;;AAEA,IAAIe,UAAUf,QAAQ,UAAR,CAAd;;AAEA,IAAIgB,WAAWd,uBAAuBa,OAAvB,CAAf;;AAEA,SAASb,sBAAT,CAAgCe,GAAhC,EAAqC;AAAE,SAAOA,OAAOA,IAAIC,UAAX,GAAwBD,GAAxB,GAA8B,EAAEE,SAASF,GAAX,EAArC;AAAwD;;AAE/F,IAAIG,WAAW,CAAC,GAAGR,QAAQS,gBAAZ,EAA8BL,SAASG,OAAvC,CAAf;AACA,IAAIG,YAAY,CAAC,GAAGT,WAAWU,iBAAf,EAAkCP,SAASG,OAA3C,CAAhB;;AAEA,IAAIK,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B;;AAEA,IAAIC,SAAS,IAAIzB,qBAAqB0B,YAAzB,CAAsC;AACjDT,YAAU,CAAC,GAAGjB,qBAAqB2B,GAAzB,EAA8BV,QAA9B,CADuC;AAEjDE,aAAWA,SAFsC;AAGjDS,WAAS,EAAEC,IAAIhB,SAASG,OAAf;AAHwC,CAAtC,CAAb;;AAMA,IAAIc,MAAM,CAAC,GAAGhC,UAAUkB,OAAd,GAAV;AACAc,IAAIC,GAAJ,CAAQ,CAAC,GAAG7B,OAAOc,OAAX,GAAR;;AAEAS,OAAOO,eAAP,CAAuB,EAAEF,KAAKA,GAAP,EAAvB;;AAEAA,IAAIC,GAAJ,CAAQjC,UAAUkB,OAAV,CAAkBiB,MAAlB,CAAyB,YAAzB,CAAR;;AAEApB,SAASG,OAAT,CAAiBkB,SAAjB,CAA2BC,IAA3B,GAAkCC,IAAlC,CAAuC,YAAY;AACjD,GAAC,GAAGzB,OAAO0B,aAAX,EAA0BxB,SAASG,OAAnC;AACAc,MAAIQ,MAAJ,CAAW,EAAEjB,MAAMA,IAAR,EAAX,EAA2B,YAAY;AACrC,WAAOkB,QAAQC,GAAR,CAAY,mDAAmDnB,IAAnD,GAA0D,sBAAtE,CAAP;AACD,GAFD;AAGD,CALD;AAMA","file":"server.js","sourcesContent":["\"use strict\";\n\nvar _express = require(\"express\");\n\nvar _express2 = _interopRequireDefault(_express);\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nvar _cors = require(\"cors\");\n\nvar _cors2 = _interopRequireDefault(_cors);\n\nvar _faker = require(\"faker\");\n\nvar _faker2 = _interopRequireDefault(_faker);\n\nvar _lodash = require(\"lodash.times\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _lodash3 = require(\"lodash.random\");\n\nvar _lodash4 = _interopRequireDefault(_lodash3);\n\nvar _schema = require(\"./schema\");\n\nvar _resolvers = require(\"./resolvers\");\n\nvar _fakes = require(\"./fakes\");\n\nvar _models = require(\"./models\");\n\nvar _models2 = _interopRequireDefault(_models);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar typeDefs = (0, _schema.generateTypeDefs)(_models2.default);\nvar resolvers = (0, _resolvers.generateResolvers)(_models2.default);\n\nvar port = process.env.PORT || 3000;\n\nvar server = new _apolloServerExpress.ApolloServer({\n  typeDefs: (0, _apolloServerExpress.gql)(typeDefs),\n  resolvers: resolvers,\n  context: { db: _models2.default }\n});\n\nvar app = (0, _express2.default)();\napp.use((0, _cors2.default)());\n\nserver.applyMiddleware({ app: app });\n\napp.use(_express2.default.static(\"app/public\"));\n\n_models2.default.sequelize.sync().then(function () {\n  (0, _fakes.generateFakes)(_models2.default);\n  app.listen({ port: port }, function () {\n    return console.log(\"\\uD83D\\uDE80 Server ready at http://localhost:\" + port + \"{server.graphqlPath}\");\n  });\n});\n//# sourceMappingURL=server.js.map"]}