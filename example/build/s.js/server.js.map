{"version":3,"sources":["../../server.js"],"names":["typeDefs","db","resolvers","port","process","env","PORT","server","ApolloServer","context","app","use","applyMiddleware","express","static","sequelize","sync","then","listen","console","log"],"mappings":";;AAAA;;;;AACA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,8BAAiBC,gBAAjB,CAAjB;AACA,IAAMC,YAAY,kCAAkBD,gBAAlB,CAAlB;;AAEA,IAAME,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;;AAEA,IAAMC,SAAS,IAAIC,iCAAJ,CAAiB;AAC9BR,YAAU,8BAAIA,QAAJ,CADoB;AAE9BE,sBAF8B;AAG9BO,WAAS,EAAER,oBAAF;AAHqB,CAAjB,CAAf;;AAMA,IAAMS,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;;AAEAJ,OAAOK,eAAP,CAAuB,EAAEF,QAAF,EAAvB;;AAEAA,IAAIC,GAAJ,CAAQE,kBAAQC,MAAR,CAAe,YAAf,CAAR;;AAEAb,iBAAGc,SAAH,CAAaC,IAAb,GAAoBC,IAApB,CAAyB,YAAM;AAC7B,4BAAchB,gBAAd;AACAS,MAAIQ,MAAJ,CAAW,EAAEf,UAAF,EAAX,EAAqB;AAAA,WACnBgB,QAAQC,GAAR,oDAAmDjB,IAAnD,0BADmB;AAAA,GAArB;AAGD,CALD","file":"server.js","sourcesContent":["import express from \"express\";\nimport { ApolloServer, gql } from \"apollo-server-express\";\nimport cors from \"cors\";\n\nimport faker from \"faker\";\nimport times from \"lodash.times\";\nimport random from \"lodash.random\";\n\nimport { generateTypeDefs } from \"./schema\";\nimport { generateResolvers } from \"./resolvers\";\nimport { generateFakes } from \"./fakes\";\nimport db from \"./models\";\n\nconst typeDefs = generateTypeDefs(db);\nconst resolvers = generateResolvers(db);\n\nconst port = process.env.PORT || 3000;\n\nconst server = new ApolloServer({\n  typeDefs: gql(typeDefs),\n  resolvers,\n  context: { db }\n});\n\nconst app = express();\napp.use(cors());\n\nserver.applyMiddleware({ app });\n\napp.use(express.static(\"app/public\"));\n\ndb.sequelize.sync().then(() => {\n  generateFakes(db);\n  app.listen({ port }, () =>\n    console.log(`ðŸš€ Server ready at http://localhost:${port}{server.graphqlPath}`)\n  );\n});\n"]}